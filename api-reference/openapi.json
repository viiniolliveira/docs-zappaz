{
  "openapi": "3.0.0",
  "info": {
    "title": "Zappaz API",
    "description": "API for managing WhatsApp sessions and webhooks",
    "version": "1.0.0"
  },
  "paths": {
    "/session/{sessionId}/connect": {
      "post": {
        "summary": "Connect session",
        "description": "Connects the specified WhatsApp session. This endpoint initializes an active connection for the session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Session connected successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/logout": {
      "put": {
        "summary": "Logout session",
        "description": "Logs out of the specified WhatsApp session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Session logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/message/text": {
      "post": {
        "summary": "Send text message",
        "description": "Sends a text message using the specified WhatsApp session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Text message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/session/{sessionId}/message/media": {
      "post": {
        "summary": "Send media message",
        "description": "Sends a media message using the specified WhatsApp session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MediaMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Media message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/session/{sessionId}/message/contact": {
      "post": {
        "summary": "Send contact message",
        "description": "Sends a contact message to a specified WhatsApp number.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/session/{sessionId}/message/location": {
      "post": {
        "summary": "Send location message",
        "description": "Sends a location message using the specified WhatsApp session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Location message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          }
        }
      }
    },
    "/session/{sessionId}/webhook": {
      "get": {
        "summary": "Get webhooks",
        "description": "Retrieves all webhooks for the specified session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhooks retrieved successfully"
          }
        }
      },
      "post": {
        "summary": "Create webhook",
        "description": "Creates a new webhook for the specified session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook created successfully"
          }
        }
      }
    },
    "/session/{sessionId}/webhook/{webhookId}": {
      "put": {
        "summary": "Update webhook",
        "description": "Updates an existing webhook.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/webhookId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webhook"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook updated successfully"
          }
        }
      },
      "delete": {
        "summary": "Delete webhook",
        "description": "Removes the specified webhook.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/webhookId"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook removed successfully"
          }
        }
      }
    },
    "/session/{sessionId}/webhook/{webhookId}/logs": {
      "get": {
        "summary": "Get webhook logs",
        "description": "Retrieves logs for the specified webhook.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/webhookId"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook logs retrieved successfully"
          }
        }
      }
    },
    "/session/{sessionId}/webhook/{webhookId}/logs/{logId}": {
      "get": {
        "summary": "Get specific webhook log",
        "description": "Retrieves a specific log entry for the webhook.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/webhookId"
          },
          {
            "$ref": "#/components/parameters/logId"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook log retrieved successfully"
          }
        }
      }
    },
    "/session/{sessionId}/display-picture": {
      "get": {
        "summary": "Get display picture",
        "description": "Retrieves the current display picture for the session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Display picture retrieved successfully"
          }
        }
      },
      "put": {
        "summary": "Update display picture",
        "description": "Updates the display picture for the session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisplayPicture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Display picture updated successfully"
          }
        }
      }
    },
    "/session/{sessionId}/update-profile-status": {
      "put": {
        "summary": "Update profile status",
        "description": "Updates the profile status for the session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile status updated successfully"
          }
        }
      }
    },
    "/session/{sessionId}/update-profile-name": {
      "put": {
        "summary": "Update profile name",
        "description": "Updates the profile name for the session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile name updated successfully"
          }
        }
      }
    },
    "/session/{sessionId}/is-on-whatsapp/{jid}": {
      "get": {
        "summary": "Check WhatsApp presence",
        "description": "Checks if the specified contact is on WhatsApp.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "responses": {
          "200": {
            "description": "Presence check completed successfully"
          }
        }
      }
    },
    "/session/{sessionId}/get-about/{jid}": {
      "get": {
        "summary": "Get contact about info",
        "description": "Retrieves the 'about' information for the specified contact.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "responses": {
          "200": {
            "description": "About information retrieved successfully"
          }
        }
      }
    },
    "/session/{sessionId}/block-contact/{jid}": {
      "put": {
        "summary": "Block contact",
        "description": "Blocks the specified contact by JID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact blocked successfully"
          }
        }
      }
    },
    "/session/{sessionId}/unblock-contact/{jid}": {
      "put": {
        "summary": "Unblock contact",
        "description": "Unblocks the specified contact by JID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact unblocked successfully"
          }
        }
      }
    },
    "/session/{sessionId}/group": {
      "get": {
        "summary": "List groups",
        "description": "Retrieves a list of groups for the session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Groups retrieved successfully"
          }
        }
      },
      "post": {
        "summary": "Create group",
        "description": "Creates a new group using the specified session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupBody"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group created successfully"
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}": {
      "put": {
        "summary": "Update group",
        "description": "Updates group details for the specified group JID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group updated successfully"
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}/send-invite": {
      "post": {
        "summary": "Send group invite",
        "description": "Sends a group invite for the specified group.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "responses": {
          "200": {
            "description": "Group invite sent successfully"
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}/{action}": {
      "post": {
        "summary": "Group action",
        "description": "Performs a specified action on the group.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupAction"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group action completed successfully"
          }
        }
      }
    },
    "/session/{sessionId}/privacy": {
      "get": {
        "summary": "Get privacy settings",
        "description": "Retrieves the privacy settings for the session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Privacy settings retrieved successfully"
          }
        }
      }
    },
    "/session/{sessionId}/privacy/last-seen": {
      "put": {
        "summary": "Update last seen privacy",
        "description": "Updates the privacy setting for last seen.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Last seen privacy updated successfully"
          }
        }
      }
    },
    "/session/{sessionId}/privacy/online": {
      "put": {
        "summary": "Update online privacy",
        "description": "Updates the privacy setting for online status.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Online privacy updated successfully"
          }
        }
      }
    },
    "/session/{sessionId}/privacy/profile-picture": {
      "put": {
        "summary": "Update profile picture privacy",
        "description": "Updates the privacy setting for profile picture.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile picture privacy updated successfully"
          }
        }
      }
    },
    "/session/{sessionId}/privacy/status": {
      "put": {
        "summary": "Update status privacy",
        "description": "Updates the privacy setting for the session's status.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status privacy updated successfully"
          }
        }
      }
    },
    "/session/{sessionId}/privacy/read-receipts": {
      "put": {
        "summary": "Update read receipts privacy",
        "description": "Updates the privacy setting for read receipts in the session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Read receipts privacy updated successfully"
          }
        }
      }
    },
    "/session/{sessionId}/privacy/groups-add": {
      "put": {
        "summary": "Update groups add privacy",
        "description": "Updates the setting that controls who can add the session to groups.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Groups add privacy updated successfully"
          }
        }
      }
    },
    "/session/{sessionId}/privacy/default-disappearing-mode": {
      "put": {
        "summary": "Update default disappearing mode",
        "description": "Updates the default disappearing mode for messages in the session.",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDefaultDisappearingMode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default disappearing mode updated successfully"
          },
          "400": {
            "description": "Invalid request or payload"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "sessionId": {
        "name": "sessionId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "jid": {
        "name": "jid",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "webhookId": {
        "name": "webhookId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "logId": {
        "name": "logId",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "MessageResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "TextMessage": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string"
          }
        }
      },
      "MediaMessage": {
        "type": "object",
        "properties": {
          "mediaUrl": {
            "type": "string"
          }
        }
      },
      "ContactMessage": {
        "type": "object",
        "properties": {
          "contact": {
            "type": "string"
          }
        }
      },
      "LocationMessage": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number"
          },
          "longitude": {
            "type": "number"
          }
        }
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          }
        }
      },
      "DisplayPicture": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string"
          }
        }
      },
      "ProfileStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "ProfileName": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          }
        }
      },
      "UpdatePrivacyValue": {
        "type": "object",
        "required": [
          "privacy"
        ],
        "properties": {
          "privacy": {
            "type": "string"
          }
        }
      },
      "UpdateDefaultDisappearingMode": {
        "type": "object",
        "required": [
          "mode"
        ],
        "properties": {
          "mode": {
            "type": "string"
          }
        }
      },
      "CreateGroupBody": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string"
          }
        }
      },
      "UpdateGroup": {
        "type": "object",
        "properties": {
          "groupName": {
            "type": "string"
          }
        }
      },
      "GroupAction": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
