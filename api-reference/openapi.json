{
  "openapi": "3.0.0",
  "info": {
    "title": "Zappaz API",
    "description": "API para envio de mensagens e gerenciamento de webhooks",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://dev.zappaz.io/api/v1",
      "description": "Servidor de API de Desenvolvimento"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Token de usuário ou sessão, passado diretamente como uma string no cabeçalho 'Authorization'. O token de usuário tem escopo sobre todas as sessões pertencentes ao usuário. O token de sessão é limitado à própria sessão."
      }
    },
    "parameters": {
      "sessionId": {
        "in": "path",
        "name": "sessionId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Identificador único da sessão"
      },
      "webhookId": {
        "in": "path",
        "name": "webhookId",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "Identificador único do webhook"
      },
      "jid": {
        "in": "path",
        "name": "jid",
        "required": true,
        "schema": {
          "type": "string"
        },
        "description": "JID do WhatsApp do contato"
      }
    },
    "schemas": {
      "SessionConfig": {
        "type": "object",
        "properties": {
          "messageOnCall": {
            "type": "string",
            "description": "Uma mensagem a ser enviada quando uma chamada é recebida. Quando messageOnCall é definido, a chamada recebida será rejeitada e a mensagem será enviada para o chamador"
          },
          "rejectCalls": {
            "type": "boolean",
            "default": false,
            "description": "Se deve rejeitar chamadas recebidas"
          },
          "ignoreGroups": {
            "type": "boolean",
            "default": false,
            "description": "Se deve ignorar grupos"
          },
          "syncFullHistory": {
            "type": "boolean",
            "default": false,
            "description": "Se deve sincronizar o histórico completo de um chat"
          },
          "markOnlineOnConnect": {
            "type": "boolean",
            "default": false,
            "description": "Quando definido como true, assim que uma sessão é conectada, os contatos sempre verão o usuário como online"
          },
          "clientConnectionName": {
            "type": "string",
            "description": "O nome da conexão do cliente. Este nome é mostrado na lista de clientes conectados"
          }
        }
      },
      "TextMessage": {
        "type": "object",
        "required": ["number", "message"],
        "properties": {
          "number": {
            "type": "string",
            "description": "Número do WhatsApp para enviar a mensagem",
            "example": "5511999999999"
          },
          "message": {
            "type": "string",
            "description": "Mensagem a ser enviada",
            "example": "Hello, how are you?"
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(Opcional) Um array de JIDs ou números de telefone para mencionar na mensagem",
            "example": ["5511999999999", "5511999999999@s.whatsapp.net"]
          },
          "quoted": {
            "type": "string",
            "description": "(Opcional) ID da mensagem para citar",
            "example": "3EB0B5EED74106A7F4EC06"
          },
          "delay": {
            "type": "number",
            "description": "(Opcional) Atraso em segundos antes de enviar a mensagem (digitando...)",
            "example": 2000
          },
          "linkPreview": {
            "type": "boolean",
            "default": true,
            "description": "(Opcional) Se deve incluir uma prévia do link quando uma mensagem contém um link"
          }
        }
      },
      "ImageMessage": {
        "type": "object",
        "required": ["number", "source"],
        "properties": {
          "number": {
            "type": "string",
            "description": "Número do WhatsApp para enviar a mensagem",
            "example": "5511999999999"
          },
          "source": {
            "type": "string",
            "description": "URL para uma imagem ou dados da imagem codificados em base64 (sem qualquer prefixo do esquema URI de dados como 'data:image/jpeg;base64,')",
            "example": "https://example.com/image.jpg"
          },
          "fileName": {
            "type": "string",
            "description": "(Opcional) Nome personalizado para o arquivo da imagem",
            "example": "my-image.jpg"
          },
          "caption": {
            "type": "string",
            "description": "(Opcional) Legenda para a imagem",
            "example": "Check out this image!"
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(Optional) An array of JIDs or phone numbers to mention in the caption",
            "example": ["5511999999999", "5511999999999@s.whatsapp.net"]
          },
          "quoted": {
            "type": "string",
            "description": "(Optional) Message ID of the message to quote",
            "example": "3EB0B5EED74106A7F4EC06"
          },
          "delay": {
            "type": "number",
            "description": "(Optional) Delay in seconds before sending the message",
            "example": 2000
          }
        }
      },
      "VideoMessage": {
        "type": "object",
        "required": ["number", "source"],
        "properties": {
          "number": {
            "type": "string",
            "description": "Número do WhatsApp para enviar a mensagem",
            "example": "5511999999999"
          },
          "source": {
            "type": "string",
            "description": "URL para um arquivo de vídeo ou dados do vídeo codificados em base64 (sem qualquer prefixo do esquema URI de dados como 'data:video/mp4;base64,')",
            "example": "https://example.com/video.mp4"
          },
          "fileName": {
            "type": "string",
            "description": "(Opcional) Nome personalizado para o arquivo do vídeo",
            "example": "my-video.mp4"
          },
          "caption": {
            "type": "string",
            "description": "(Opcional) Legenda para o vídeo",
            "example": "Check out this video!"
          },
          "gifPlayback": {
            "type": "boolean",
            "default": false,
            "description": "(Opcional) Se deve enviar o vídeo como GIF"
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(Opcional) Um array de JIDs ou números de telefone para mencionar na legenda",
            "example": ["5511999999999", "5511999999999@s.whatsapp.net"]
          },
          "quoted": {
            "type": "string",
            "description": "(Opcional) ID da mensagem para citar",
            "example": "3EB0B5EED74106A7F4EC06"
          },
          "delay": {
            "type": "number",
            "description": "(Opcional) Atraso em segundos antes de enviar a mensagem",
            "example": 2000
          }
        }
      },
      "AudioMessage": {
        "type": "object",
        "required": ["number", "source"],
        "properties": {
          "number": {
            "type": "string",
            "description": "Número do WhatsApp para enviar a mensagem",
            "example": "5511999999999"
          },
          "source": {
            "type": "string",
            "description": "URL para um arquivo de áudio ou dados do áudio codificados em base64 (sem qualquer prefixo do esquema URI de dados como 'data:audio/mp3;base64,')",
            "example": "https://example.com/audio.mp3"
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(Opcional) Um array de JIDs ou números de telefone para mencionar na legenda",
            "example": ["5511999999999", "5511999999999@s.whatsapp.net"]
          },
          "quoted": {
            "type": "string",
            "description": "(Opcional) ID da mensagem para citar",
            "example": "3EB0B5EED74106A7F4EC06"
          },
          "delay": {
            "type": "number",
            "description": "(Opcional) Atraso em segundos antes de enviar a mensagem",
            "example": 2000
          }
        }
      },
      "DocumentMessage": {
        "type": "object",
        "required": ["number", "source"],
        "properties": {
          "number": {
            "type": "string",
            "description": "Número do WhatsApp para enviar a mensagem",
            "example": "5511999999999"
          },
          "source": {
            "type": "string",
            "description": "URL para um arquivo de documento ou dados do documento codificados em base64 (sem qualquer prefixo do esquema URI de dados como 'data:application/pdf;base64,')",
            "example": "https://example.com/document.pdf"
          },
          "fileName": {
            "type": "string",
            "description": "(Opcional) Nome personalizado para o arquivo do documento",
            "example": "my-document.pdf"
          },
          "caption": {
            "type": "string",
            "description": "(Opcional) Legenda para o documento",
            "example": "Check out this document!"
          },
          "mentions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "(Opcional) Um array de JIDs ou números de telefone para mencionar na legenda",
            "example": ["5511999999999", "5511999999999@s.whatsapp.net"]
          },
          "quoted": {
            "type": "string",
            "description": "(Opcional) ID da mensagem para citar",
            "example": "3EB0B5EED74106A7F4EC06"
          },
          "delay": {
            "type": "number",
            "description": "(Opcional) Atraso em segundos antes de enviar a mensagem",
            "example": 2000
          }
        }
      },
      "ContactMessage": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Número do WhatsApp para enviar a mensagem",
            "example": "5511999999999"
          },
          "contact": {
            "type": "object",
            "properties": {
              "phoneNumber": {
                "type": "string",
                "description": "O número de telefone do contato",
                "example": "5511999999999"
              },
              "firstName": {
                "type": "string",
                "description": "O primeiro nome do contato",
                "example": "John"
              },
              "lastName": {
                "type": "string",
                "description": "O sobrenome do contato",
                "example": "Doe"
              }
            },
            "required": ["phoneNumber"]
          },
          "delay": {
            "type": "number",
            "description": "(Opcional) Atraso em segundos antes de enviar a mensagem (digitando...)",
            "example": 2000
          }
        },
        "required": ["number", "contact"]
      },
      "LocationMessage": {
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "Número do WhatsApp para enviar a mensagem",
            "example": "5511999999999"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude da localização",
            "example": -22.9110137
          },
          "longitude": {
            "type": "number",
            "description": "Longitude da localização",
            "example": -43.2093727
          },
          "address": {
            "type": "string",
            "description": "Endereço da localização",
            "example": "Rua das Flores, 123"
          },
          "name": {
            "type": "string",
            "description": "Nome da localização",
            "example": "Casa do João"
          }
        },
        "required": ["number"]
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "failed"]
          },
          "data": {
            "type": "object"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["failed"]
          },
          "message": {
            "type": "string"
          }
        }
      },
      "WebhookResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "error"]
          },
          "data": {
            "$ref": "#/components/schemas/WebhookData"
          }
        }
      },
      "WebhookData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identificador único do webhook"
          },
          "url": {
            "type": "string",
            "description": "URL onde os eventos do webhook serão enviados"
          },
          "displayName": {
            "type": "string",
            "description": "Nome de exibição opcional para o webhook"
          },
          "enabled": {
            "type": "boolean",
            "description": "Se o webhook está ativo"
          },
          "events": {
            "$ref": "#/components/schemas/WebhookEventsSchema",
            "description": "Configuração de quais eventos este webhook assina"
          },
          "headers": {
            "type": "object",
            "description": "Cabeçalhos personalizados a serem enviados com as requisições do webhook",
            "additionalProperties": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Quando o webhook foi criado"
          },
          "waSessionId": {
            "type": "string",
            "description": "ID da sessão do WhatsApp a que este webhook pertence"
          }
        }
      },
      "WebhookListResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["success", "error"]
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookData"
            }
          },
          "page": {
            "type": "string",
            "description": "Número da página atual"
          },
          "pageSize": {
            "type": "string",
            "description": "Número de itens por página"
          },
          "total": {
            "type": "number",
            "description": "Número total de webhooks"
          }
        }
      },
      "WebhookEventsSchema": {
        "type": "object",
        "properties": {
          "call": {
            "type": "boolean",
            "default": false
          },
          "blocklist.set": {
            "type": "boolean",
            "default": false
          },
          "blocklist.update": {
            "type": "boolean",
            "default": false
          },
          "chats.delete": {
            "type": "boolean",
            "default": false
          },
          "chats.phoneNumberShare": {
            "type": "boolean",
            "default": false
          },
          "chats.update": {
            "type": "boolean",
            "default": false
          },
          "chats.upsert": {
            "type": "boolean",
            "default": false
          },
          "connection.update": {
            "type": "boolean",
            "default": false
          },
          "contacts.update": {
            "type": "boolean",
            "default": false
          },
          "contacts.upsert": {
            "type": "boolean",
            "default": false
          },
          "creds.update": {
            "type": "boolean",
            "default": false
          },
          "group-participants.update": {
            "type": "boolean",
            "default": false
          },
          "group.join-request": {
            "type": "boolean",
            "default": false
          },
          "groups.update": {
            "type": "boolean",
            "default": false
          },
          "groups.upsert": {
            "type": "boolean",
            "default": false
          },
          "labels.association": {
            "type": "boolean",
            "default": false
          },
          "labels.edit": {
            "type": "boolean",
            "default": false
          },
          "message-receipt.update": {
            "type": "boolean",
            "default": false
          },
          "messages.delete": {
            "type": "boolean",
            "default": false
          },
          "messages.media-update": {
            "type": "boolean",
            "default": false
          },
          "messages.reaction": {
            "type": "boolean",
            "default": false
          },
          "messages.send": {
            "type": "boolean",
            "default": false
          },
          "messages.update": {
            "type": "boolean",
            "default": false
          },
          "messaging-history.set": {
            "type": "boolean",
            "default": false
          },
          "presence.update": {
            "type": "boolean",
            "default": false
          },
          "inbound-message.upsert": {
            "type": "boolean",
            "default": false
          },
          "outbound-message.upsert": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "CreateWebhookBodySchema": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          },
          "events": {
            "$ref": "#/components/schemas/WebhookEventsSchema"
          },
          "headers": {
            "type": "object"
          }
        }
      },
      "CreateGroupSchema": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "O nome do grupo",
            "example": "My Group"
          },
          "description": {
            "type": "string",
            "description": "A descrição do grupo",
            "example": "This is a group for my friends"
          }
        }
      },
      "UpdateDisplayPicture": {
        "type": "object",
        "required": ["identifier", "source"],
        "properties": {
          "identifier": {
            "type": "string",
            "description": "O número de telefone ou ID do grupo do contato ou grupo para atualizar a foto de perfil",
            "example": "120363333119256884@g.us"
          },
          "source": {
            "type": "string",
            "description": "URL ou string codificada em base64 para a nova foto de perfil",
            "example": "https://example.com/image.jpg"
          }
        }
      },
      "UpdateProfileStatus": {
        "type": "object",
        "required": ["status"],
        "properties": {
          "status": {
            "type": "string",
            "description": "Novo status do perfil (sobre) a ser definido"
          }
        }
      },
      "UpdateProfileName": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Novo nome do perfil a ser definido"
          }
        }
      },
      "PrivacySettings": {
        "type": "object",
        "properties": {
          "lastSeen": {
            "type": "string",
            "description": "Nível de privacidade para última visualização (ex: 'everyone', 'contacts', 'nobody')"
          },
          "online": {
            "type": "string",
            "description": "Nível de privacidade para status online"
          },
          "profilePicture": {
            "type": "string",
            "description": "Nível de privacidade para foto de perfil"
          },
          "status": {
            "type": "string",
            "description": "Nível de privacidade para status"
          },
          "readReceipts": {
            "type": "string",
            "description": "Nível de privacidade para confirmações de leitura"
          },
          "groupsAdd": {
            "type": "string",
            "description": "Nível de privacidade para adição em grupos"
          }
        }
      },
      "UpdateProfilePicturePrivacyValue": {
        "type": "object",
        "required": ["privacy"],
        "properties": {
          "privacy": {
            "type": "string",
            "description": "Nova configuração de privacidade para foto de perfil (ex: 'contacts', 'all', 'contact_blacklist', 'none')"
          }
        }
      },
      "UpdateStatusPrivacyValue": {
        "type": "object",
        "required": ["privacy"],
        "properties": {
          "privacy": {
            "type": "string",
            "description": "Nova configuração de privacidade para status (ex: 'contacts', 'all', 'contact_blacklist', 'none')"
          }
        }
      },
      "UpdateReadReceiptsPrivacyValue": {
        "type": "object",
        "required": ["privacy"],
        "properties": {
          "privacy": {
            "type": "string",
            "description": "Nova configuração de privacidade para confirmações de leitura (ex: 'all', 'none')"
          }
        }
      },
      "UpdateGroupPrivacyValue": {
        "type": "object",
        "required": ["privacy"],
        "properties": {
          "privacy": {
            "type": "string",
            "description": "Nova configuração de privacidade para grupo (ex: 'contacts', 'all', 'contact_blacklist')"
          }
        }
      },
      "UpdatePrivacyValue": {
        "type": "object",
        "required": ["privacy"],
        "properties": {
          "privacy": {
            "type": "string",
            "description": "Nova configuração de privacidade (ex: 'all', 'match_last_seen')"
          }
        }
      },
      "UpdateDefaultDisappearingMode": {
        "type": "object",
        "required": ["mode"],
        "properties": {
          "mode": {
            "type": "string",
            "description": "Modo de desaparecimento padrão (ex: '24h', '7d', 'custom')"
          }
        }
      },
      "GroupParticipantsArray": {
        "type": "array",
        "items": {
          "type": "string",
          "description": "Número de telefone de um participante em formato internacional sem o sinal '+' (ex: '5511999999999')"
        },
        "description": "Array de números de telefone representando participantes de um grupo do WhatsApp",
        "example": ["5511999999999", "5522888888888"]
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Messages",
      "description": "Operações de envio de mensagens"
    },
    {
      "name": "Webhooks",
      "description": "Operações de gerenciamento de webhooks"
    },
    {
      "name": "Actions",
      "description": "Ações do WhatsApp como gerenciamento de perfil e operações de contato"
    },
    {
      "name": "Groups",
      "description": "Operações de gerenciamento de grupos do WhatsApp"
    },
    {
      "name": "Privacy",
      "description": "Gerenciamento de configurações de privacidade"
    }
  ],
  "paths": {
    "/session/{sessionId}/message/text": {
      "parameters": [
        {
          "$ref": "#/components/parameters/sessionId"
        }
      ],
      "post": {
        "tags": ["Messages"],
        "summary": "Send text message",
        "description": "Envia uma mensagem de texto para um número específico do WhatsApp.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mensagem de texto enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/message/image": {
      "parameters": [
        {
          "$ref": "#/components/parameters/sessionId"
        }
      ],
      "post": {
        "tags": ["Messages"],
        "summary": "Send image message",
        "description": "Envia uma mensagem com imagem para um número específico do WhatsApp. O parâmetro 'source' pode ser uma URL para uma imagem ou uma string base64 da imagem (sem qualquer prefixo do esquema URI de dados).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mensagem com imagem enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/message/video": {
      "parameters": [
        {
          "$ref": "#/components/parameters/sessionId"
        }
      ],
      "post": {
        "tags": ["Messages"],
        "summary": "Send video message",
        "description": "Envia uma mensagem com vídeo para um número específico do WhatsApp. O parâmetro 'source' pode ser uma URL para um arquivo de vídeo ou uma string base64 do vídeo (sem qualquer prefixo do esquema URI de dados).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mensagem com vídeo enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/message/audio": {
      "parameters": [
        {
          "$ref": "#/components/parameters/sessionId"
        }
      ],
      "post": {
        "tags": ["Messages"],
        "summary": "Send audio message",
        "description": "Envia uma mensagem de áudio para um número específico do WhatsApp. O parâmetro 'source' pode ser uma URL para um arquivo de áudio ou uma string base64 do áudio (sem qualquer prefixo do esquema URI de dados).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AudioMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mensagem de áudio enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/message/document": {
      "parameters": [
        {
          "$ref": "#/components/parameters/sessionId"
        }
      ],
      "post": {
        "tags": ["Messages"],
        "summary": "Send document message",
        "description": "Envia uma mensagem com documento para um número específico do WhatsApp. O parâmetro 'source' pode ser uma URL para um arquivo ou uma string base64 do documento (sem qualquer prefixo do esquema URI de dados).",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mensagem com documento enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/message/contact": {
      "parameters": [
        {
          "$ref": "#/components/parameters/sessionId"
        }
      ],
      "post": {
        "tags": ["Messages"],
        "summary": "Send contact message",
        "description": "Envia uma mensagem com contato para um número específico do WhatsApp.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ContactMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mensagem com contato enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/message/location": {
      "parameters": [
        {
          "$ref": "#/components/parameters/sessionId"
        }
      ],
      "post": {
        "tags": ["Messages"],
        "summary": "Send location message",
        "description": "Envia uma mensagem com localização para um número específico do WhatsApp. É necessário fornecer pelo menos um endereço ou coordenadas. Quando ambos são fornecidos, as coordenadas têm prioridade. Quando latitude e longitude não são fornecidas, tentamos buscar o endereço automaticamente.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mensagem com localização enviada com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Requisição inválida",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro interno do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/webhook": {
      "parameters": [
        {
          "$ref": "#/components/parameters/sessionId"
        }
      ],
      "get": {
        "tags": ["Webhooks"],
        "summary": "Get webhooks",
        "description": "Recupera todos os webhooks para a sessão especificada",
        "responses": {
          "200": {
            "description": "Lista de webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookListResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Webhooks"],
        "summary": "Create webhook",
        "description": "Cria um novo webhook para a sessão especificada",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebhookBodySchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook criado com sucesso",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Corpo da requisição inválido",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Sessão não encontrada",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Erro do servidor",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/webhook/{webhookId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/sessionId"
        },
        {
          "$ref": "#/components/parameters/webhookId"
        }
      ],
      "put": {
        "tags": ["Webhooks"],
        "summary": "Update webhook",
        "description": "Atualiza um webhook existente para a sessão especificada",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "URL where webhook events will be sent"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Optional display name for the webhook"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether the webhook is active"
                  },
                  "events": {
                    "$ref": "#/components/schemas/WebhookEventsSchema",
                    "description": "Configuration of which events this webhook subscribes to"
                  },
                  "headers": {
                    "type": "object",
                    "description": "Custom headers to be sent with webhook requests",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Webhook not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Webhooks"],
        "summary": "Delete webhook",
        "description": "Exclui um webhook existente para a sessão especificada",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/webhookId"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["success", "error"]
                    },
                    "message": {
                      "type": "string",
                      "example": "Webhook deleted"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/webhook/{webhookId}/logs": {
      "get": {
        "tags": ["Webhooks"],
        "summary": "Get webhook logs",
        "description": "Recupera logs para um webhook específico com opções de paginação e filtragem",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/webhookId"
          },
          {
            "in": "query",
            "name": "event",
            "schema": {
              "type": "string"
            },
            "description": "Filter logs by event type"
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "type": "string"
            },
            "description": "Filter logs by HTTP status code"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "string",
              "default": "1"
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "pageSize",
            "schema": {
              "type": "string",
              "default": "100"
            },
            "description": "Number of items per page"
          },
          {
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Start date for log filtering (ISO 8601)"
          },
          {
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "End date for log filtering (ISO 8601)"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["success", "error"]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "webhookId": {
                            "type": "string"
                          },
                          "webhookDisplayName": {
                            "type": "string"
                          },
                          "event": {
                            "type": "string",
                            "description": "Event type",
                            "example": "inbound-message.upsert"
                          },
                          "sessionId": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "response": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "number",
                                "example": 200,
                                "description": "HTTP status code of the response"
                              },
                              "data": {
                                "type": "object",
                                "description": "Response data"
                              },
                              "headers": {
                                "type": "object",
                                "description": "Response headers"
                              }
                            }
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "string"
                    },
                    "total": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/group": {
      "get": {
        "tags": ["Groups"],
        "summary": "List groups",
        "description": "Recupera uma lista de grupos associados à sessão",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Groups retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["success", "error"]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the group",
                            "example": "120363333119256884@g.us"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the group",
                            "example": "My Group"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the group",
                            "example": "This is a group for my friends"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or session not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Groups"],
        "summary": "Create group",
        "description": "Cria um novo grupo para a sessão",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateGroupSchema"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Group created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["success", "error"]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the group",
                          "example": "120363333119256884@g.us"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the group",
                          "example": "My Group"
                        },
                        "description": {
                          "type": "string",
                          "description": "The description of the group",
                          "example": "This is a group for my friends"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}": {
      "put": {
        "tags": ["Groups"],
        "summary": "Update group",
        "description": "Atualiza detalhes do grupo como assunto, descrição e configurações de administrador",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "in": "path",
            "name": "jid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Group identifier (JID)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subject": {
                    "type": "string",
                    "description": "The subject of the group",
                    "example": "My Group"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of the group",
                    "example": "This is a group for my friends"
                  },
                  "onlyAdminsCanPost": {
                    "type": "boolean",
                    "description": "Whether only admins can post in the group"
                  },
                  "onlyAdminsCanEditInfo": {
                    "type": "boolean",
                    "description": "Whether only admins can edit the group info"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or group not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}/send-invite": {
      "post": {
        "tags": ["Groups"],
        "summary": "Send group invite",
        "description": "Envia um convite para entrar no grupo especificado",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "in": "path",
            "name": "jid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Group identifier (JID)",
            "example": "120363333119256884@g.us"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string",
                    "description": "Phone number of the invitee",
                    "example": "5519987465779"
                  },
                  "message": {
                    "type": "string",
                    "description": "Message to send with the invite",
                    "example": "Join my group!"
                  }
                },
                "required": ["number", "message"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group invite sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}/add": {
      "post": {
        "tags": ["Groups"],
        "summary": "Add participants",
        "description": "Adiciona participantes a um grupo do WhatsApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "in": "path",
            "name": "jid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Group identifier (JID) in the format 'groupid@g.us'"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupParticipantsArray"
              }
            }
          },
          "description": "Array of phone numbers to add to the group."
        },
        "responses": {
          "200": {
            "description": "Participants added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Status of the operation for each participant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}/remove": {
      "post": {
        "tags": ["Groups"],
        "summary": "Remove participants",
        "description": "Remove participantes de um grupo do WhatsApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "in": "path",
            "name": "jid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Group identifier (JID) in the format 'groupid@g.us'"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupParticipantsArray"
              }
            }
          },
          "description": "Array of phone numbers to remove from the group."
        },
        "responses": {
          "200": {
            "description": "Participants removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Status of the operation for each participant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}/promote": {
      "post": {
        "tags": ["Groups"],
        "summary": "Promote",
        "description": "Promove participantes a administradores em um grupo do WhatsApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "in": "path",
            "name": "jid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Group identifier (JID) in the format 'groupid@g.us'"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupParticipantsArray"
              }
            }
          },
          "description": "Array of phone numbers to promote to admin."
        },
        "responses": {
          "200": {
            "description": "Participants promoted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Status of the operation for each participant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}/demote": {
      "post": {
        "tags": ["Groups"],
        "summary": "Demote",
        "description": "Rebaixa administradores a participantes comuns em um grupo do WhatsApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "in": "path",
            "name": "jid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Group identifier (JID) in the format 'groupid@g.us'"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupParticipantsArray"
              }
            }
          },
          "description": "Array of phone numbers to demote from admin."
        },
        "responses": {
          "200": {
            "description": "Admins demoted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "Status of the operation for each participant"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}/invite-code": {
      "post": {
        "tags": ["Groups"],
        "summary": "Get group invite code",
        "description": "Recupera o código de convite para um grupo do WhatsApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "in": "path",
            "name": "jid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Group identifier (JID) in the format 'groupid@g.us'"
          }
        ],
        "responses": {
          "200": {
            "description": "Invite code retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "inviteCode": {
                      "type": "string",
                      "example": "AbCdEfGhIjKlMnOp"
                    },
                    "inviteUrl": {
                      "type": "string",
                      "example": "https://chat.whatsapp.com/AbCdEfGhIjKlMnOp"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or group not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}/invite-code-revoke": {
      "post": {
        "tags": ["Groups"],
        "summary": "Revoke group invite code",
        "description": "Revoga o código de convite atual e gera um novo para um grupo do WhatsApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "in": "path",
            "name": "jid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Group identifier (JID) in the format 'groupid@g.us'"
          }
        ],
        "responses": {
          "200": {
            "description": "Invite code revoked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Invite code revoked"
                    },
                    "newInviteCode": {
                      "type": "string",
                      "example": "QrStUvWxYzAbCdEf"
                    },
                    "newInviteCodeUrl": {
                      "type": "string",
                      "example": "https://chat.whatsapp.com/QrStUvWxYzAbCdEf"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or group not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/group/{jid}/leave": {
      "post": {
        "tags": ["Groups"],
        "summary": "Leave group",
        "description": "Sai de um grupo do WhatsApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "in": "path",
            "name": "jid",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Group identifier (JID) in the format 'groupid@g.us'"
          }
        ],
        "responses": {
          "200": {
            "description": "Left group successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "Left group"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or group not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/display-picture": {
      "get": {
        "tags": ["Actions"],
        "summary": "Get display picture",
        "description": "Recupera a foto de perfil do identificador fornecido. O identificador pode ser um número de telefone ou um ID de grupo",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "in": "query",
            "name": "identifier",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The phone number or group id of the contact or group to get the display picture for."
          }
        ],
        "responses": {
          "200": {
            "description": "Display picture retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Actions"],
        "summary": "Update display picture",
        "description": "Atualiza a foto de perfil de um grupo ou da sessão conectada atual. O identificador pode ser um número de telefone ou um ID de grupo",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDisplayPicture"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Display picture updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/update-profile-status": {
      "put": {
        "tags": ["Actions"],
        "summary": "Update profile status",
        "description": "Atualiza o status do perfil (sobre) da sessão do WhatsApp conectada",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileStatus"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/update-profile-name": {
      "put": {
        "tags": ["Actions"],
        "summary": "Update profile name",
        "description": "Atualiza o nome do perfil da sessão do WhatsApp conectada",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfileName"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile name updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/is-on-whatsapp/{jid}": {
      "get": {
        "tags": ["Actions"],
        "summary": "Is contact is on wpp",
        "description": "Verifica se o JID do contato fornecido (número de telefone ou ID de grupo) está registrado no WhatsApp",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "responses": {
          "200": {
            "description": "WhatsApp availability retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid JID or request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/get-about/{jid}": {
      "get": {
        "tags": ["Actions"],
        "summary": "Get contact about info",
        "description": "Recupera as informações 'sobre' do contato especificado",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "responses": {
          "200": {
            "description": "About information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid JID or request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/block-contact/{jid}": {
      "put": {
        "tags": ["Actions"],
        "summary": "Block contact",
        "description": "Bloqueia o contato especificado pelo JID",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact blocked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or JID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/unblock-contact/{jid}": {
      "put": {
        "tags": ["Actions"],
        "summary": "Unblock contact",
        "description": "Desbloqueia o contato especificado pelo JID",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          },
          {
            "$ref": "#/components/parameters/jid"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact unblocked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or JID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/privacy": {
      "get": {
        "tags": ["Privacy"],
        "summary": "Get privacy settings",
        "description": "Recupera as configurações de privacidade atuais para a sessão especificada",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "responses": {
          "200": {
            "description": "Privacy settings retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PrivacySettings"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/privacy/last-seen": {
      "put": {
        "tags": ["Privacy"],
        "summary": "Update last seen privacy",
        "description": "Atualiza a configuração de privacidade de última visualização para a sessão",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Last seen privacy updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/privacy/online": {
      "put": {
        "tags": ["Privacy"],
        "summary": "Update online privacy",
        "description": "Atualiza a configuração de privacidade online para a sessão",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Online privacy updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/privacy/profile-picture": {
      "put": {
        "tags": ["Privacy"],
        "summary": "Update profile picture privacy",
        "description": "Atualiza a configuração de privacidade da foto de perfil da sessão",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateProfilePicturePrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile picture privacy updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/privacy/status": {
      "put": {
        "tags": ["Privacy"],
        "summary": "Update status privacy",
        "description": "Atualiza a configuração de privacidade do status da sessão",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateStatusPrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status privacy updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/privacy/read-receipts": {
      "put": {
        "tags": ["Privacy"],
        "summary": "Update read receipts privacy",
        "description": "Atualiza a configuração de privacidade das confirmações de leitura na sessão",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReadReceiptsPrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Read receipts privacy updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/privacy/groups-add": {
      "put": {
        "tags": ["Privacy"],
        "summary": "Update groups add privacy",
        "description": "Atualiza a configuração que controla quem pode adicionar a sessão a grupos",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupPrivacyValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Groups add privacy updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/session/{sessionId}/privacy/default-disappearing-mode": {
      "put": {
        "tags": ["Privacy"],
        "summary": "Update default disappearing mode",
        "description": "Atualiza o modo de desaparecimento padrão para mensagens na sessão",
        "parameters": [
          {
            "$ref": "#/components/parameters/sessionId"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDefaultDisappearingMode"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default disappearing mode updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or payload",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  }
}
